name: Build, test (unit, functional) and scan the application

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:

jobs:
  build_application:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: compiled_app_binaries

  ragger_tests:
    name: Run ragger tests using the reusable workflow
    needs: build_application
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries
      run_for_devices: '["stax"]'

  unittesting:
    name: C unit testing
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
      - name: Install cmocka
        run: |
          sudo apt update
          sudo apt install libcmocka-dev lcov
      - name: Compile the tests
        run: |
          cd tests/unit/
          rm -rf build/
          cmake -B build -H.
          make -C build
      - name: Run the tests
        run: |
          cd tests/unit/
          CTEST_OUTPUT_ON_FAILURE=1 make -C build test
      - name: Generate code coverage
        run: |
          cd tests/unit/
          lcov --directory . -b "$(realpath build/)" --capture --initial -o coverage.base
          lcov --rc lcov_branch_coverage=1 --directory . -b "$(realpath build/)" --capture -o coverage.capture
          lcov --directory . -b "$(realpath build/)" --add-tracefile coverage.base --add-tracefile coverage.capture -o coverage.info
          lcov --directory . -b "$(realpath build/)" --remove coverage.info '*/unit-tests/*' -o coverage.info
          genhtml coverage.info -o coverage
      - uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: tests/unit/coverage
